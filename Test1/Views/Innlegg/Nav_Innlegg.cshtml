<link href="~/css/lightbox.css?v=2" rel="stylesheet" />
<script src="~/js/lightbox-2.6.js?v=2"></script>

@using Portefolio_webApp.Models;
@{
    var thisid = "djdj";
    var eierId = "";
    var tittel = "";
    var kategori = "";
    var klokkeslett = "";
    var dato = "";
    var url = "";
    var tagger = new List<string>();
    var beskrivelse = "";
    var innlegg = new Innlegg();
    var kommentar = new List<Kommentar>();

    var bruker = (Portefolio_webApp.Models.Bruker)ViewData["bruker"];

    var innlogget_bruker = new Bruker();
    if (ViewData["Innlogget_Bruker"] != null)
        innlogget_bruker = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];


    @model Portefolio_webApp.Models.Innlegg;
    if (Model.Kategori != null || Model.IkonURL != null)
    {

        thisid = Model.Id;
        eierId = Model.EierId;
        tittel = Model.Tittel;
        kategori = Model.Kategori;
        klokkeslett = Model.Klokkeslett;
        dato = Model.Dato;
        url = Model.IkonURL;
        tagger = Model.Tagger;
        beskrivelse = Model.Beskrivelse;
        kommentar = Model.Kommentar;
    }
}


@*
    <div id='lightboxOverlay' class='lightboxOverlay'></div>
    <div id='lightbox' class='lightbox'>
        <div class='lb-outerContainer'>
            <div class='lb-container'>
                <img class='lb-image' src='' />
                <div class='lb-nav'>
                    <a class='lb-prev' href=''></a>
                <a class='lb-next' href=''></a>
                </div>
                <div class='lb-loader'>
                    <a class='lb-cancel'></a>
                </div>
            </div>
        </div>
        <div class='lb-dataContainer'>
            <div class='lb-data'>
                <div class='lb-details'>
                    <span class='lb-caption'></span>
                    <span class='lb-number'></span>
                </div>
                <div class='lb-closeContainer'>
                    <a class='lb-close'></a>
                </div>
            </div>
        </div>
    </div>").appendTo($('body'));
*@

<style>
    .music_player {
        margin: 2px;
        width: 310px;
        height: 310px;
        overflow: hidden;
        position: relative;
        margin: auto;
        display: block;
        background-color: #212529
    }
    .play_button_div {
        background-color: rgba(39,39,39,0);
        height: 100%;
        position: absolute;
        top: 0;
        width: 100%;
        padding-top: 220px;
        display: block;
        text-align: center;
        padding-left: 10px;
        padding-right: 10px;
    }
        .play_button_div h3 {
            color: #fff;
            font-size: 20px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .play_button_div p {
            color: #fff;
            font-size: 20px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    .play_button {
        position: absolute;
        margin-top: 105px;
        margin-bottom: 105px;
        margin-left: 105px;
        margin-right: 105px;
        opacity: 0;
        z-index: 1;
        width: 100px;
        height: 100px;
    }
    .shadowed {
        -webkit-filter: drop-shadow(4px 4px 4px rgba(0,0,0,0.8));
        filter: url(#drop-shadow);
        -ms-filter: "progid:DXImageTransform.Microsoft.Dropshadow(OffX=4, OffY=4, Color='#444')";
        filter: "progid:DXImageTransform.Microsoft.Dropshadow(OffX=4, OffY=4, Color='#444')";
    }
    .play_button:active {
        transform: scale(.95);
        filter: brightness(50%);
    }
    .music_player:hover .play_button {
        opacity: 1;
    }
    .music_player:hover .play_button_div {
        background-color: rgba(39,39,39,0.8);
    }
    .artist, .sangnavn {
        opacity: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .music_player:hover .artist {
        opacity: 1;
    }
    .music_player:hover .sangnavn {
        opacity: 1;
    }
    .imge {
        min-width: 100%;
        min-height: 100%;
        max-width: 100%;
        height: auto;
        object-fit: cover;
    }
    textarea {
        resize: none;
        border-radius: .25rem;
    }
    body {
        background-color: #232426;
        margin-top: 60px;
    }
    .hovedInnlegg {
        margin: auto;
        box-shadow: 0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06);
        background-color: #384352;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: .25rem;
        padding: 10px;
        overflow: hidden;
        margin-bottom: 20px;
    }
    .tekstogbilde {
        max-height: 705px;
    }
    .musikk {
        min-height: 280px;
    }
    .bildediv {
        text-align: center;
    }
    .bildeInnlegg {
        max-width: 100%;
        max-height: 685px;
        object-fit: contain;
        border-radius: .25rem;
    }
    .tekstInnlegg{
        height: 785px;
        width: 100%;
    }
    .hovedInnlegg h1 {
        color: white;
    }
    .hovedInnlegg p {
        color: white;
    }
    @* brukerikon og brukernavn sammen *@
    .innleggTop {
        position: relative;
        margin-top: 10px;
        height: 90px;
    }
    .ikontxttop {
        font-size: 20px;
        width: 50%;
        margin-top: 15px;
        margin-bottom: 10px;
        color: white;
        display: inline;
    }
    .innleggProfil {
        height: 90px;
    }
    .uploaddato {
        position: absolute;
        margin-top: 7px;
    }
        .infodiv img {
            float: left;
            border-radius: .25rem;
            height: 80px;
            width: 80px;
            object-fit: cover;
            margin-right: 10px;
        }
        .infodiv h1 {
            margin-top: -5px;
            font-size: 39px;
            color: white;
            width: 100%;
        }
    .beskrivelse {
        margin-top: 30px;
    }
    .ikontxt {
        font-size: 25px;
        margin-top: -10px;
        margin-left: 60px;
        left: 45px;
        color: white;
        max-width: 80%;
        display: inline;
    }
    .kommentartext {
        left:51px;
        padding: 10px;
        top: -15px;
        color: white;
    }
    .row {
        margin-left: 0px;
    }
    .kommentarProfil {
        position: relative;
        margin-bottom: 0px;
    }
    .kommentarProfilbottom {
        margin-bottom: -20px
    }
    .kommentarProfil img {
        float: left;
        border-radius: 50%;
        position: absolute;
        height: 50px;
        width: 50px;
        object-fit: cover;
        margin-right: 10px;
    }
    .kommentardiv {
        margin: auto;
        box-shadow: 0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06);
        background-color: #384352;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: .25rem;
        padding: 10px;
    }
    .infodiv {
        margin: auto;
        margin-bottom: 20px;
        box-shadow: 0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06);
        background-color: #384352;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: .25rem;
        padding: 10px;
    }
    .infodivmusikk {
        
    }
    .infodiv p {
        color: white;
    }
    hr.white {
        border-top: 1px solid white;
    }
    @* Beskrivelse tekst *@
    p.solid {
        margin-left: 50px;
        position: absolute;
        padding: 10px;
        top: 10px;
        color: white;
    }
    p.notsolid {
        display: block;
        margin-top: 10px;
        margin-left: 300px;
        margin-right: 300px;
        border-style: solid;
        border-width: thin;
        padding: 10px;
        clear: left;
        color: white;
    }
    p.solidreply {
        display: block;
        margin-top: 10px;
        margin-left: 350px;
        margin-right: 300px;
        border-style: solid;
        border-width: thin;
        border-color: dimgray;
        padding: 10px;
        clear: left;
        color: white;
    }
    .replyarea {
        display: none;
        margin-left:60px;
    }
    .innloggetprofilbilde {
        float: left;
        border-radius: 50%;
        height: 50px;
        width: 50px;
        object-fit: cover;
        margin-right: 10px;
    }
    .skrivKommentar {
        outline: none;
        display: block;
    }
    .replyProfil {
        margin-top: 0px;
        margin-left: 70px;
        border-left: 2px solid white;
        padding-left: 10px;
    }
    .reply {
        font-size: 20px;
        margin-top: -20px;
        margin-left: 45px;
        color: white;
        display: inline;
    }
    .singleKommentar {
        margin-top: 40px;
        border-top: 0px solid white;
        border-left: 0px solid white;
        padding-top: 20px;
        padding-left: 10px;
    }
    .slettKommentar {
        height: 30px;
        color: white;
        background-color: transparent;
        border: none;
        margin-left: 46px;
        margin-top: -20px;
    }
    .replyButton {
        margin-left: 60px;
        color: white;
        background-color: transparent;
        border: none;
        margin-top: 15px;
        display: block
    }
    .replyButton:hover {
        text-decoration: underline;
    }
    .postKommentarButton {
        margin-left: 60px;
        margin-top: 10px;
        border-radius: .25rem;
        outline: none;
        border: none;
        background-color: #1abc9c;
        color: white;
    }
    .postReplyButton {
        margin-top: 5px;
        border-radius: .25rem;
        outline: none;
        margin-top:10px;
        border: none;
        background-color: #1abc9c;
        color: white;
    }
    .postKommentarButton:hover {
        background-color: #0275d8;
    }
    .postKommentarButton:hover {
        background-color: #0275d8;
    }
    .dislikebutton {
        color: white;
        background-color: transparent;
        border: none;
        display: block
    }
    .likebutton {
        color: white;
        background-color: transparent;
        border: none;
        display: block
    }
    .likes{
        display: inline-block;
        position: relative;
    }
    .likes p {
        position: absolute;
        left: 30px;
        top: 0;
    }
    .tagGrid {
        width: 100%;
        margin-left: -45px;
    }
    .tagGrid li {
        display: inline-block;
    }
        .tagGrid p {
            margin: 5px;
            border: 1px solid #232426;
            background-color: #232426;
            padding-left: 10px;
            padding-right: 10px;
            border-radius: 20px;
            white-space: nowrap;
        }
    /*//////////////////////////////////////////////////////////////////////////*/
    .musikk_kontroller {
    }
    .stopper {
        position: absolute;
        height: 100px;
        width: 100px;
        z-index:2;
        left: calc(50% - 50px);
        top: calc(50% - 50px);
    }
        .stopper:active {
            transform: scale(0.9);
        }
    #tracktime {
        position: absolute;
        bottom: 27px;
        left: 2%;
        color: white;
    }
    #trackduration {
        position: absolute;
        bottom: 27px;
        right: 2%;
        color: white;
    }
    #sangfelt {
        position: absolute;
        margin-left: 19px;
        width: 170px;
        color: white;
    }
    #artistfelt {
        position: absolute;
        margin-left: 19px;
        margin-top: 18px;
        width: 170px;
        color: white;
    }
    #volume-control {
        position: absolute;
        left: 2%;
    }
    #seekbar {
        position: absolute;
        width: 96%;
        bottom: 10px;
        left: 2%;
    }
    @@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}
    @@keyframes counterrotation {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(-359deg);
        }
    }
    .rotate {
        animation: rotation 15s infinite linear;
        animation-play-state: paused;
    }
    .counterrotate {
        animation: counterrotation 15s infinite linear;
        animation-play-state: paused;
    }
    .fuck {
        border-radius: 50%;
        width: 95%;
        margin-left: 5%;
        margin-bottom: 7%;
        padding-top: 95%;
        background-image: url('@Model.CoverURL');
        background-position: center; /* Center the image */
        background-repeat: no-repeat; /* Do not repeat the image */
        background-size: cover;
    }
    input[type=range][orient=vertical] {
        writing-mode: bt-lr; /* IE */
        -webkit-appearance: slider-vertical; /* WebKit */
        width: 8px;
        height: 50%;
    }
    .musikkdiv {
        margin: auto;
    }
    @@media only screen and (max-width: 965px) {
        .left-grid {
            margin-right: 0;
            min-width: 100%;
        }
        .right-grid {
            margin-left: 0;
        }
    }
    @@media only screen and (min-width: 965px) {
        .left-grid {
            margin-right: 10px;
            min-width: 260px;
        }
        .right-grid {
            margin-left: 10px;
        }
    }
    .musikkbeskrivelse{
        font-size: 20px;
    }

    .likesnmr {
        font-size: 18px;
        margin-left: 5px;
        margin-top: -5px;
    }
</style>

<script>
    function Kommentar(nyId, FraHvemID, FraHvemNavn, TilHvemID,  innleggID) {
    var url = '@Html.Raw(Url.Action("NyttKommentar", "Innlegg", new { tekst = "_tekst_", innleggId = "_innleggId_" }))';
    var tekst = $('textarea#kommentarFelt').val();
    var params = url.replace('_tekst_', tekst).replace('_innleggId_', nyId);
    window.location.href = params;
          /*
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();
        today = mm + '/' + dd + '/' + yyyy;
    var jsonNotfic = {
        "type": "Kommentar",
        "erLest": false,
        "FraHvemID": FraHvemID,
        "FraHvemNavn": FraHvemNavn,
        "TilHvemID": TilHvemID,
        "innleggID":  innleggID,
        "Tidspunkt": today
    };
   */

           $.ajax({
                    type: "POST",
                    url: '@Url.Action("LikeInnlegg", "Innlegg")',
                    data: json,
                    dataType: "json",
                 success: function (result) {
                 },
                 error: function (result) {
                 }
             });
}
function Reply(nyId, kommId) {
    var url = '@Html.Raw(Url.Action("NyttReply", "Innlegg", new { tekst = "_tekst_", innleggId = "_innleggId_", kommentId = "_kommentId_" }))';
    var tekst = $('#replyFelt' + kommId).val();
    var params = url.replace('_tekst_', tekst).replace('_innleggId_', nyId).replace('_kommentId_', kommId);
    window.location.href = params;
}
function hideReply(kommId) {
    $('#replyArea' + kommId).toggle();
}
function deleteKommentar(kommId, innId) {
    var url = '@Html.Raw(Url.Action("DeleteKommentar", "Innlegg", new { innleggId = "_innleggId_", kommentarId = "_kommentarId_" }))';
    var params = url.replace('_innleggId_', innId).replace('_kommentarId_', kommId);
    window.location.href = params;
}
function deleteReply(repId, kommId, innId) {
    var url = '@Html.Raw(Url.Action("DeleteReply", "Innlegg", new { innleggId = "_innleggId_", kommentarId = "_kommentarId_", replyId = "_replyId_" }))';
    var params = url.replace('_innleggId_', innId).replace('_kommentarId_', kommId).replace('_replyId_', repId);
    window.location.href = params;
}
function like(innId) {
    var url = '@Html.Raw(Url.Action("LikeInnlegg", "Innlegg", new { innleggId = "_innleggId_" }))';
    var params = url.replace('_innleggId_', innId);
    window.location.href = params;
}
function dislike(innId) {
    var url = '@Html.Raw(Url.Action("DislikeInnlegg", "Innlegg", new { innleggId = "_innleggId_" }))';
    var params = url.replace('_innleggId_', innId);
    window.location.href = params;
    }
    function ajaxLike(innId, likeRatio) {
             var json = {
                 "innleggId": innId,
                  "likeRatio": likeRatio
        };
        $('#realLikeButton').toggle();
        $('#fakeLikeButton').toggle();
        $('#realLikes').toggle();
        $('#fakeLikes').toggle();
             $.ajax({
                    type: "POST",
                    url: '@Url.Action("LikeInnlegg", "Innlegg")',
                    data: json,
                    dataType: "json",
                 success: function (result) {
                 },
                 error: function (result) {
                 }
             });
    }
    function ajaxDislike(innId) {
             var json = {
                "innleggId": innId
        };
        $('#realLikeButton').toggle();
        $('#fakeLikeButton').toggle();
        $('#realLikes').toggle();
        $('#fakeLikes').toggle();
             $.ajax({
                    type: "POST",
                    url: '@Url.Action("DislikeInnlegg", "Innlegg")',
                    data: json,
                    dataType: "json",
                 success: function (result) {
                 },
                 error: function (result) {
                 }
             });
    }
    function spillAv(sang, toggle) {
        var lyd = document.getElementById(sang);
        var loggle = document.getElementById(toggle);
        var animation = document.getElementById("albumcover");
        var counteranimation = document.getElementById("playstop");
        if (lyd.paused) {
            loggle.src = "/resources/icons8-pause-96.png"
            lyd.play();
            animation.style.animationPlayState = 'running';
            counteranimation.style.animationPlayState = 'running';
        }
        else {
            loggle.src = "/resources/icons8-play-96.png"
            lyd.pause();
            animation.style.animationPlayState = 'paused';
            counteranimation.style.animationPlayState = 'paused';
        }
    };
    function volum(verdi) {
        var audio = document.getElementsByClassName('lydspor'),
            i = audio.length;
        while (i--) {
            var lyd = audio[i].id;
            var luld = document.getElementById(lyd);
            luld.volume = verdi / 10;
        };
    }
    function visSang(sang, artist) {
        var sang = document.getElementById(sang).textContent;
        var artist = document.getElementById(artist).textContent;
        var sangfelt = document.getElementById("sangfelt");
        var artistfelt = document.getElementById("artistfelt");
        sangfelt.innerHTML = sang + " - ";
        artistfelt.innerHTML = artist;
    }
    function timer(lydId) {
        var lyd = document.getElementById(lydId);
        lyd = document.getElementById("seekbar").value = (lyd.currentTime * 100) / lyd.duration;
        /*var time = lyd.currentTime;
        var minutes = Math.floor(time / 60);
        var seconds = Math.floor(time);
        minutes = parseFloat(minutes);
        seconds = parseFloat(seconds);*/
        var tid = lyd.currentTime;
        var lengde = lyd.duration;
        //document.getElementById('tracktime').innerHTML = Math.floor(lyd.currentTime) + ' / ' + Math.floor(lyd.duration);
        // + " / " +
    }
    var info = document.getElementsByClassName("awesome-info");
    var image = document.getElementsByClassName("single-awesome-portfolio");
    $(document).ready(function () {
        var windows = $(window).width();
        var heightMusikk = document.getElementById("musikkplayercard").clientWidth;
        var heightInfo = document.getElementById("infocard").clientWidth;


        if (heightMusikk >= heightInfo) {
            document.getElementById('infocard').style.height = heightMusikk + 'px';
            
        }
        else if (heightInfo >= heightMusikk) {
            document.getElementById('musikkplayercard').style.height = heightInfo + 'px';
        }
        else if (windows < 965) {
            document.getElementById('musikkplayercard').style.height = "auto";
            document.getElementById('infocard').style.height = "auto";
        }

            /*var heightInfo = document.getElementById("infocard").clientHeight;
            if (windows > 965)
                document.getElementById('musikkplayercard').style.height = heightInfo + 'px';
            else if (windows < 965)
                document.getElementById('musikkplayercard').style.height = "auto";*/
        
        
    });
    window.onresize = function () {
        var windows = $(window).width();
        var heightInfoMusikk = document.getElementById("musikkplayercard").clientHeight;
        var heightInfo = document.getElementById("infocard").clientHeight;

        var ajustedHeight = heightInfo * 1.1;

        
        if (windows < 965) {
            document.getElementById('musikkplayercard').style.height = "auto";
            document.getElementById('infocard').style.height = "auto";
            
        }
        else if (windows > 965) {
            document.getElementById('musikkplayercard').style.height = heightInfo + 'px';
            console.log(heightInfo);
        }
        
       

        
       

       
        
            /*var heightInfo = document.getElementById("infocard").clientHeight;
            if (windows > 965)
                document.getElementById('musikkplayercard').style.height = heightInfo + 'px';
            else if (windows < 965)
                document.getElementById('musikkplayercard').style.height = "auto";*/
        
        
    }

    $(document).ready(function () {
        var audio = document.getElementById('sang');

            audio.volume = 0.5;
        
    });
</script>



@*Klassen inneholder Tittel, opplastingsdato, og hovedinnlegget (bilde eller pdf)*@




    @if (kategori.Equals("Image"))
    {
        <div class="hovedInnlegg tekstogbilde card container col-10">

            <div class="bildediv ">
                <a href='@url' data-lightbox="lightboxImg" data-title="myLightbox">
                    <img src='@url' class="bildeInnlegg" alt="error" id="innlegg" />
                </a>
            </div>
        </div>
        <div class="infodiv col-10">

                <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
                    <img src="@bruker.Profilbilde" id="@url" />

                </a>

                <h1 class="">@tittel</h1>
                <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
                    <h3 class="ikontxttop">@bruker.Navn</h3>
                </a>



                <p class="uploaddato">@dato</p>
                <p class="beskrivelse">@beskrivelse</p>

                <ul class="tagGrid">

                @{
                    var antall = 0;
                    var tag = Model.Tagger;


}
                @if(tag != null) { 
                while (antall < tag.Count)
                {
                    <li>
                        <p class="tag">@tag.ElementAt(antall)</p>
                    </li>
                        antall++;
                    }
                }
            </ul>


                @{
                    var likeNr = 1;
                }

        <div class="likes">
            @if (ViewData["Token"] != null)

                {




                
                    var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];
                    var i = 0;
                    var check = 0;

                

                @if (Model.Likes != null)
                {



                    @while (i < Model.Likes.Brukere.Count)
                    {
                        @if (du.Id.Equals(Model.Likes.Brukere[i]))
                        {
                            likeNr = -1;
                            <button id="realLikeButton" class="dislikebutton" onclick="ajaxDislike('@thisid')">
                                <i class="fas fa-thumbs-up"></i>
                            </button>
                            <button id="fakeLikeButton" class="dislikebutton" style="display: none" onclick="ajaxLike('@thisid')">
                                <i class="far fa-thumbs-up"></i>
                            </button>
                            check = 1;
                            break;
                        }


                        i++;
                    }
                }

                @if (check == 0)
                {
                    <button id="realLikeButton" class="likebutton" onclick="ajaxLike('@thisid')">
                        <i class="far fa-thumbs-up"></i>
                    </button>
                    <button id="fakeLikeButton" class="likebutton" style="display: none" onclick="ajaxDislike('@thisid')">
                        <i class="fas fa-thumbs-up"></i>
                    </button>
                }

                
                    var likes = Model.Likes.Antall;
                    <p class="likesnmr" id="realLikes">@likes</p>
                    var plusLikes = Model.Likes.Antall + @likeNr;
                    <p class="likesnmr" id="fakeLikes" style="display: none">@plusLikes</p>
                


            }
        </div>
        </div>


    }
    else if (kategori.Equals("Text"))
    {
<div class="infodiv col-10">

    <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
        <img src="@bruker.Profilbilde" id="@url" />

    </a>

    <h1 class="">@tittel</h1>
    <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
        <h3 class="ikontxttop">@bruker.Navn</h3>
    </a>



    <p class="uploaddato">@dato</p>
    <p class="beskrivelse">@beskrivelse</p>

    <ul class="tagGrid">

        @{
            var antall = 0;
            var tag = Model.Tagger;
        }
        @while (antall < tag.Count)
        {
            <li>
                <p class="tag">@tag.ElementAt(antall)</p>
            </li>
            antall++;
        }
    </ul>


    @{
        var likeNr = 1;
    }

<div class="likes">
    @if (ViewData["Token"] != null)

    {




        
            var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];
            var i = 0;
            var check = 0;

        

        @if (Model.Likes != null)
        {



            @while (i < Model.Likes.Brukere.Count)
            {
                @if (du.Id.Equals(Model.Likes.Brukere[i]))
                {
                    likeNr = -1;
                    <button id="realLikeButton" class="dislikebutton" onclick="ajaxDislike('@thisid')">
                        <i class="fas fa-thumbs-up"></i>
                    </button>
                    <button id="fakeLikeButton" class="dislikebutton" style="display: none" onclick="ajaxLike('@thisid')">
                        <i class="far fa-thumbs-up"></i>
                    </button>
                    check = 1;
                    break;
                }


                i++;
            }
        }
        @if (check == 0)
        {
            <button id="realLikeButton" class="likebutton" onclick="ajaxLike('@thisid')">
                <i class="far fa-thumbs-up"></i>
            </button>
            <button id="fakeLikeButton" class="likebutton" style="display: none" onclick="ajaxDislike('@thisid')">
                <i class="fas fa-thumbs-up"></i>
            </button>
        }


    }
    @{
        var likes = Model.Likes.Antall;
        <p class="likesnmr" id="realLikes">@likes</p>
        var plusLikes = Model.Likes.Antall + @likeNr;
        <p class="likesnmr" id="fakeLikes" style="display: none">@plusLikes</p>
    }
</div>
</div>
        <div class="hovedInnlegg tekstogbilde card container col-10">
            <embed src='@url' class="tekstInnlegg" />
        </div>
    }
    else if (kategori.Equals("Sound"))
    {
        <div class="musikkdiv row col-10 px-0 gx-5">
            <div class="hovedInnlegg musikk card left-grid" id="musikkplayercard">
                <div class="musikk_kontroller">

                        <span id="sangfelt"></span>
                        <span id="artistfelt"></span>

                        <span id="tracktime">0:00</span>
                        <progress id="seekbar" value="0" max="100"></progress>
                        <span id="trackduration">0:00</span>



                    <input type="range" id="volume-control" orient=vertical value="5" min="0" max="10" onload="volum(this.value)" onchange="volum(this.value)">

                    </div>

                    <!--<img id="sangi" class=" shadowed" src='~/resources/icons8-play-96.png' onclick='spillAv("sang", "sangi"); visSang("sangnavn", "artist")' />
                    -->
                    <audio id="sang" class="lydspor" preload="metadata" src="@url"
                           ontimeupdate="timer('sang'); var minutter = Math.floor(this.currentTime / 60); var sekunder = Math.floor(this.currentTime - minutter * 60);
                                     document.getElementById('tracktime').innerHTML = minutter + ':' + ('0' + sekunder).slice(-2);"
                           onloadeddata="var minutter1 = Math.floor(this.duration / 60); var sekunder1 = Math.floor(this.duration - minutter1 * 60);
                                      document.getElementById('trackduration').innerHTML = minutter1 + ':' + ('0' + sekunder1).slice(-2);"></audio>
                <div class="fuck rotate" id="albumcover">
                    <img class="stopper counterrotate" id="playstop" src="~/resources/icons8-play-96.png" onclick='spillAv("sang", "playstop"); timer("sang")' />
                </div>
            </div>

                <div class="infodiv infodivmusikk musikk col gx-5 right-grid" id="infocard">

                    <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
                        <img src="@bruker.Profilbilde" id="@url" />

                    </a>

                    <h1 class="">@tittel</h1>
                    <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@bruker.Id">
                        <h3 class="ikontxttop">@bruker.Navn</h3>
                    </a>



                    <p class="uploaddato">@dato</p>
                    <p class="beskrivelse musikkbeskrivelse">@beskrivelse</p>

                    <ul class="tagGrid">

                        @{
                            var antall = 0;
                            var tag = Model.Tagger;
                        }
                        @if (tag != null) { 
                            while (antall < tag.Count)
                            {
                            <li>
                                <p class="tag">@tag.ElementAt(antall)</p>
                            </li>
                                antall++;
                            } }
                    </ul>


                    @{
                        var likeNr = 1;
                    }

            <div class="likes">

                    @if (ViewData["Token"] != null)

                    {



                    
                        var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];
                        var i = 0;
                        var check = 0;

                    

                    @if (Model.Likes != null)
                    {



                        @while (i < Model.Likes.Brukere.Count)
                        {
                            @if (du.Id.Equals(Model.Likes.Brukere[i]))
                            {
                                likeNr = -1;
                                <button id="realLikeButton" class="dislikebutton" onclick="ajaxDislike('@thisid')">
                                    <i class="fas fa-thumbs-up"></i>
                                </button>
                                <button id="fakeLikeButton" class="dislikebutton" style="display: none" onclick="ajaxLike('@thisid')">
                                    <i class="far fa-thumbs-up"></i>
                                </button>
                                check = 1;
                                break;
                            }


                            i++;
                        }
                    }
                    @if (check == 0)
                    {
                        <button id="realLikeButton" class="likebutton" onclick="ajaxLike('@thisid')">
                            <i class="far fa-thumbs-up"></i>
                        </button>
                        <button id="fakeLikeButton" class="likebutton" style="display: none" onclick="ajaxDislike('@thisid')">
                            <i class="fas fa-thumbs-up"></i>
                        </button>
                    }


                }
                else
                {
            <button id="realLikeButton" class="dislikebutton">
                <i class="fas fa-thumbs-up"></i>
            </button>
                }
                @{
                    var likes = Model.Likes.Antall;
                    <p class="likesnmr" id="realLikes">@likes</p>
                    var plusLikes = Model.Likes.Antall + @likeNr;
                    <p class="likesnmr" id="fakeLikes" style="display: none">@plusLikes</p>
                }
            </div>
            </div>
        </div>
    }
    else if (kategori.Equals(""))
    {
        <div class="hovedInnlegg ">
            <p>Beklager men denne siden eksisterer ikke </p>
        </div>
    }
    else
    {
        <p>Noe gikk galt</p>
    }



    








<div class="kommentardiv container col-10">

        @if (ViewData["Token"] != null && bruker != null)

        {

            var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];



            <div class="nyttKommentarFelt" ;>
                <a asp-controller="Profilside" asp-action="Profilside">
                    <img src=@du.Profilbilde class="innloggetprofilbilde" id="imgikon" />
                </a>
                <div class="textareadiv">
                    <textarea id="kommentarFelt" name="w3review" rows="3" class="skrivKommentar col-9" placeholder="What do you think..."></textarea>

                    <button style="margin-top: 10px;" class="postKommentarButton" onclick="Kommentar('@thisid',  '@innlogget_bruker.Id', '@innlogget_bruker.Navn', '@bruker.Id',  '@Model.Id')">Comment</button>
                </div>
            </div>
        }
        @*Setter opp alle kommentarer som tilhører innlegget*@

        @{
            var antallReply = 0;
        }
        @{
            var antallKommentarer = 0;
        }

        @if (kommentar.Count != 0)
            @while (antallKommentarer < kommentar.Count)
            {
                var kommentid = kommentar[antallKommentarer].Id;
                var tekst = kommentar[antallKommentarer].Tekst;
                var komid = kommentar[antallKommentarer].EierId;
                var bilde = kommentar[antallKommentarer].EierBilde;
                var nvn = kommentar[antallKommentarer].EierNavn;
                <div class="singleKommentar">


                    <div class="kommentarProfil kommentarProfilbottom">
                        <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@komid">
                            <img src=@bilde id="imgikon" />
                        </a>

                        <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@komid">
                            <p class="ikontxt">@nvn</p>
                        </a>

                        <div class="row">
                            <p class="kommentartext col-9">@tekst</p>
                            @if (ViewData["Token"] != null)
                            {
                                var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];
                                @if (du.Id.Equals(@komid))
                                {
                                    <button class="slettKommentar " onclick="deleteKommentar('@antallKommentarer', '@thisid')"><i class="far fa-trash-alt delete-folder"></i></button>
                                }

                            }


                        </div>

                    </div>

                    @{
                        var divid = "replyFelt" + antallKommentarer;
                    }


                    @while (antallReply < kommentar[antallKommentarer].Kommentarer.Count)
                    {
                        var replyid = kommentar[antallKommentarer].Kommentarer[antallReply].EierId;
                        var replytekst = kommentar[antallKommentarer].Kommentarer[antallReply].Tekst;
                        var replykomid = kommentar[antallKommentarer].Kommentarer[antallReply].EierId;
                        var replybilde = kommentar[antallKommentarer].Kommentarer[antallReply].EierBilde;
                        var replynvn = kommentar[antallKommentarer].Kommentarer[antallReply].EierNavn;

                        <div class="kommentarProfil replyProfil">
                            <a asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@replykomid">
                                <img src=@replybilde id="imgikon" />

                            </a>
                            <a class="col-auto" asp-controller="Profilside" asp-action="Profilside" asp-route-brukerID="@replykomid">
                                <p class="reply">@replynvn</p>

                            </a>
                            <div class="row">

                                <p class="kommentartext col-8">@replytekst</p>

                                @if (ViewData["Token"] != null)
                                {
                                    var du = (Portefolio_webApp.Models.Bruker)ViewData["Innlogget_Bruker"];
                                    @if (du.Id.Equals(@replyid))
                                    {
                                        <button class="slettKommentar " onclick="deleteReply('@antallReply', '@antallKommentarer', '@thisid')"><i class="far fa-trash-alt delete-folder"></i></button>
                                    }

                                }

                            </div>

                        </div>



                        antallReply += 1;

                    }
                    @if (ViewData["Token"] != null && bruker != null)
                    {
                        <button style="margin-top: 10px;" onclick="hideReply('@antallKommentarer')" class="replyButton">Reply</button>
                    }

                    <div id="@("replyArea" + antallKommentarer)" class="replyarea">
                        <textarea id="@("replyFelt" + antallKommentarer)" name="w3review" rows="4" class="skrivKommentar col-5" placeholder="Write a reply..."></textarea>
                        <button class="postReplyButton" onclick="Reply('@thisid' , '@antallKommentarer')">Reply</button>
                    </div>
                    @{antallReply = 0;
                        antallKommentarer += 1;
                    }
                </div>
            }
    </div>
    <div id="alleKommentarFelt">

    </div>



<svg height="0" xmlns="http://www.w3.org/2000/svg">
    <filter id="drop-shadow">
        <feGaussianBlur in="SourceAlpha" stdDeviation="4" />
        <feOffset dx="4" dy="4" result="offsetblur" />
        <feFlood flood-color="rgba(0,0,0,0.8)" />
        <feComposite in2="offsetblur" operator="in" />
        <feMerge>
            <feMergeNode />
            <feMergeNode in="SourceGraphic" />
        </feMerge>
    </filter>
</svg>